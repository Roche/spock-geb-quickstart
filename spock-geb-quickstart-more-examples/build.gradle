/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2023 F. Hoffmann-La Roche Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'groovy'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

sourceSets {
    acceptance {
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath + configurations.testCompileClasspath + sourceSets.test.output
        runtimeClasspath += output + compileClasspath + configurations.testRuntimeClasspath + sourceSets.test.output
    }
}

idea {
    module {
        testSourceDirs += sourceSets.acceptance.java.srcDirs
        testSourceDirs += sourceSets.acceptance.groovy.srcDirs
        testResourceDirs += sourceSets.acceptance.resources.srcDirs
        scopes.TEST.plus += [configurations.acceptanceRuntimeClasspath, configurations.acceptanceCompileClasspath]
    }
}

task acceptanceTest(type: Test) {
    description = 'Runs the acceptance tests.'
    group = 'verification'
    testClassesDirs = sourceSets.acceptance.output.classesDirs
    classpath = sourceSets.acceptance.runtimeClasspath
    outputs.upToDateWhen { false }
    useJUnitPlatform()
}

task dockerAcceptanceTest(type: Test) {
    description = 'Runs the acceptance tests with a dockerized browser.'
    group = 'verification'
    testClassesDirs = sourceSets.acceptance.output.classesDirs
    classpath = sourceSets.acceptance.runtimeClasspath
    outputs.upToDateWhen { false }
    systemProperty 'spring.profiles.active', 'docker'
    useJUnitPlatform()
}

dependencies {
    implementation project(':spock-geb-quickstart')
}

test {
    systemProperties "geb.build.reportsDir": "$reportsDir/geb"
    useJUnitPlatform()
}

config {
    licensing {
        enabled = false
    }
}
