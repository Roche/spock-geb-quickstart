/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2019-2020 Hoffmann-La Roche.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'org.kordamp.gradle.integration-test' version '0.36.0'
    id 'org.kordamp.gradle.functional-test' version '0.36.0'
    id 'signing'
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'maven-publish'

group = 'com.roche.spock.geb'

repositories {
    mavenCentral()
}

if (!project.hasProperty('ossrhUsername')) ext.ossrhUsername = '**undefined**'
if (!project.hasProperty('ossrhPassword')) ext.ossrhPassword = '**undefined**'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Spock Geb Quickstart'
                description = 'This project simplifies executing Spock and Geb-based frontend tests.'
                url = 'https://github.com/Roche/spock-geb-quickstart'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jerzykrlkroche'
                        name = 'Jerzy Krolak'
                    }
                }
                scm {
                    connection = 'git@github.com:Roche/spock-geb-quickstart.git'
                    developerConnection = 'git@github.com:Roche/spock-geb-quickstart.git'
                    url = 'https://github.com/Roche/spock-geb-quickstart'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username "${ossrhUsername}"
                password "${ossrhPassword}"
            }
        }
    }

}

signing {
    sign publishing.publications.mavenJava
}

sourceCompatibility = 8

functionalTest {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', rootProject.findProperty('profile') ?: 'default'
}

ext {
    gebVersion = "5.1"
    seleniumVersion = "4.0.0"
    springBootVersion = '3.0.3'
    nettyVersion = '4.1.68.Final'
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.30'

    implementation 'com.aoe:geb-spock-reports:0.3.0-RC1'
    implementation("com.athaydes:spock-reports:2.1-groovy-3.0") { transitive = false }

    api "org.gebish:geb-spock:${gebVersion}"

    api group: 'org.spockframework', name: 'spock-core', version: '2.0-groovy-3.0'
    api group: 'org.spockframework', name: 'spock-spring', version: '2.0-groovy-3.0'

    api("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    implementation("io.github.bonigarcia:webdrivermanager:4.4.1")
    implementation('com.browserup:browserup-proxy-core:2.1.2')
    implementation('com.browserup:browserup-proxy-mitm:2.1.2')

    implementation "org.testcontainers:selenium:1.15.3"

    api "org.seleniumhq.selenium:selenium-remote-driver:${seleniumVersion}"

    api "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
    api "org.seleniumhq.selenium:selenium-api:${seleniumVersion}"
    api "org.seleniumhq.selenium:selenium-support:${seleniumVersion}"

    implementation "io.netty:netty-all:${nettyVersion}"
}

test {
    useJUnitPlatform()
    systemProperties "geb.build.reportsDir": "$reportsDir/geb"
}
